
linkbomb_6：     文件格式 elf32-i386


Disassembly of section .init:

08049000 <_init>:
 8049000:	f3 0f 1e fb          	endbr32 
 8049004:	53                   	push   %ebx
 8049005:	83 ec 08             	sub    $0x8,%esp
 8049008:	e8 b3 00 00 00       	call   80490c0 <__x86.get_pc_thunk.bx>
 804900d:	81 c3 f3 2f 00 00    	add    $0x2ff3,%ebx
 8049013:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8049019:	85 c0                	test   %eax,%eax
 804901b:	74 02                	je     804901f <_init+0x1f>
 804901d:	ff d0                	call   *%eax
 804901f:	83 c4 08             	add    $0x8,%esp
 8049022:	5b                   	pop    %ebx
 8049023:	c3                   	ret    

Disassembly of section .plt:

08049030 <.plt>:
 8049030:	ff 35 04 c0 04 08    	pushl  0x804c004
 8049036:	ff 25 08 c0 04 08    	jmp    *0x804c008
 804903c:	00 00                	add    %al,(%eax)
	...

08049040 <puts@plt>:
 8049040:	ff 25 0c c0 04 08    	jmp    *0x804c00c
 8049046:	68 00 00 00 00       	push   $0x0
 804904b:	e9 e0 ff ff ff       	jmp    8049030 <.plt>

08049050 <strlen@plt>:
 8049050:	ff 25 10 c0 04 08    	jmp    *0x804c010
 8049056:	68 08 00 00 00       	push   $0x8
 804905b:	e9 d0 ff ff ff       	jmp    8049030 <.plt>

08049060 <__libc_start_main@plt>:
 8049060:	ff 25 14 c0 04 08    	jmp    *0x804c014
 8049066:	68 10 00 00 00       	push   $0x10
 804906b:	e9 c0 ff ff ff       	jmp    8049030 <.plt>

Disassembly of section .text:

08049070 <_start>:
 8049070:	f3 0f 1e fb          	endbr32 
 8049074:	31 ed                	xor    %ebp,%ebp
 8049076:	5e                   	pop    %esi
 8049077:	89 e1                	mov    %esp,%ecx
 8049079:	83 e4 f0             	and    $0xfffffff0,%esp
 804907c:	50                   	push   %eax
 804907d:	54                   	push   %esp
 804907e:	52                   	push   %edx
 804907f:	e8 23 00 00 00       	call   80490a7 <_start+0x37>
 8049084:	81 c3 7c 2f 00 00    	add    $0x2f7c,%ebx
 804908a:	8d 83 40 d5 ff ff    	lea    -0x2ac0(%ebx),%eax
 8049090:	50                   	push   %eax
 8049091:	8d 83 d0 d4 ff ff    	lea    -0x2b30(%ebx),%eax
 8049097:	50                   	push   %eax
 8049098:	51                   	push   %ecx
 8049099:	56                   	push   %esi
 804909a:	c7 c0 86 91 04 08    	mov    $0x8049186,%eax
 80490a0:	50                   	push   %eax
 80490a1:	e8 ba ff ff ff       	call   8049060 <__libc_start_main@plt>
 80490a6:	f4                   	hlt    
 80490a7:	8b 1c 24             	mov    (%esp),%ebx
 80490aa:	c3                   	ret    
 80490ab:	66 90                	xchg   %ax,%ax
 80490ad:	66 90                	xchg   %ax,%ax
 80490af:	90                   	nop

080490b0 <_dl_relocate_static_pie>:
 80490b0:	f3 0f 1e fb          	endbr32 
 80490b4:	c3                   	ret    
 80490b5:	66 90                	xchg   %ax,%ax
 80490b7:	66 90                	xchg   %ax,%ax
 80490b9:	66 90                	xchg   %ax,%ax
 80490bb:	66 90                	xchg   %ax,%ax
 80490bd:	66 90                	xchg   %ax,%ax
 80490bf:	90                   	nop

080490c0 <__x86.get_pc_thunk.bx>:
 80490c0:	8b 1c 24             	mov    (%esp),%ebx
 80490c3:	c3                   	ret    
 80490c4:	66 90                	xchg   %ax,%ax
 80490c6:	66 90                	xchg   %ax,%ax
 80490c8:	66 90                	xchg   %ax,%ax
 80490ca:	66 90                	xchg   %ax,%ax
 80490cc:	66 90                	xchg   %ax,%ax
 80490ce:	66 90                	xchg   %ax,%ax

080490d0 <deregister_tm_clones>:
 80490d0:	b8 d4 c0 04 08       	mov    $0x804c0d4,%eax
 80490d5:	3d d4 c0 04 08       	cmp    $0x804c0d4,%eax
 80490da:	74 24                	je     8049100 <deregister_tm_clones+0x30>
 80490dc:	b8 00 00 00 00       	mov    $0x0,%eax
 80490e1:	85 c0                	test   %eax,%eax
 80490e3:	74 1b                	je     8049100 <deregister_tm_clones+0x30>
 80490e5:	55                   	push   %ebp
 80490e6:	89 e5                	mov    %esp,%ebp
 80490e8:	83 ec 14             	sub    $0x14,%esp
 80490eb:	68 d4 c0 04 08       	push   $0x804c0d4
 80490f0:	ff d0                	call   *%eax
 80490f2:	83 c4 10             	add    $0x10,%esp
 80490f5:	c9                   	leave  
 80490f6:	c3                   	ret    
 80490f7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80490fe:	66 90                	xchg   %ax,%ax
 8049100:	c3                   	ret    
 8049101:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8049108:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804910f:	90                   	nop

08049110 <register_tm_clones>:
 8049110:	b8 d4 c0 04 08       	mov    $0x804c0d4,%eax
 8049115:	2d d4 c0 04 08       	sub    $0x804c0d4,%eax
 804911a:	89 c2                	mov    %eax,%edx
 804911c:	c1 e8 1f             	shr    $0x1f,%eax
 804911f:	c1 fa 02             	sar    $0x2,%edx
 8049122:	01 d0                	add    %edx,%eax
 8049124:	d1 f8                	sar    %eax
 8049126:	74 20                	je     8049148 <register_tm_clones+0x38>
 8049128:	ba 00 00 00 00       	mov    $0x0,%edx
 804912d:	85 d2                	test   %edx,%edx
 804912f:	74 17                	je     8049148 <register_tm_clones+0x38>
 8049131:	55                   	push   %ebp
 8049132:	89 e5                	mov    %esp,%ebp
 8049134:	83 ec 10             	sub    $0x10,%esp
 8049137:	50                   	push   %eax
 8049138:	68 d4 c0 04 08       	push   $0x804c0d4
 804913d:	ff d2                	call   *%edx
 804913f:	83 c4 10             	add    $0x10,%esp
 8049142:	c9                   	leave  
 8049143:	c3                   	ret    
 8049144:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8049148:	c3                   	ret    
 8049149:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08049150 <__do_global_dtors_aux>:
 8049150:	f3 0f 1e fb          	endbr32 
 8049154:	80 3d d4 c0 04 08 00 	cmpb   $0x0,0x804c0d4
 804915b:	75 1b                	jne    8049178 <__do_global_dtors_aux+0x28>
 804915d:	55                   	push   %ebp
 804915e:	89 e5                	mov    %esp,%ebp
 8049160:	83 ec 08             	sub    $0x8,%esp
 8049163:	e8 68 ff ff ff       	call   80490d0 <deregister_tm_clones>
 8049168:	c6 05 d4 c0 04 08 01 	movb   $0x1,0x804c0d4
 804916f:	c9                   	leave  
 8049170:	c3                   	ret    
 8049171:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8049178:	c3                   	ret    
 8049179:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08049180 <frame_dummy>:
 8049180:	f3 0f 1e fb          	endbr32 
 8049184:	eb 8a                	jmp    8049110 <register_tm_clones>

08049186 <main>:
 8049186:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 804918a:	83 e4 f0             	and    $0xfffffff0,%esp
 804918d:	ff 71 fc             	pushl  -0x4(%ecx)
 8049190:	55                   	push   %ebp
 8049191:	89 e5                	mov    %esp,%ebp
 8049193:	51                   	push   %ecx
 8049194:	83 ec 04             	sub    $0x4,%esp
 8049197:	a1 d0 c0 04 08       	mov    0x804c0d0,%eax
 804919c:	85 c0                	test   %eax,%eax
 804919e:	74 09                	je     80491a9 <main+0x23>
 80491a0:	a1 d0 c0 04 08       	mov    0x804c0d0,%eax
 80491a5:	ff d0                	call   *%eax
 80491a7:	eb 10                	jmp    80491b9 <main+0x33>
 80491a9:	83 ec 0c             	sub    $0xc,%esp
 80491ac:	68 04 a1 04 08       	push   $0x804a104
 80491b1:	e8 8a fe ff ff       	call   8049040 <puts@plt>
 80491b6:	83 c4 10             	add    $0x10,%esp
 80491b9:	b8 00 00 00 00       	mov    $0x0,%eax
 80491be:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 80491c1:	c9                   	leave  
 80491c2:	8d 61 fc             	lea    -0x4(%ecx),%esp
 80491c5:	c3                   	ret    

080491c6 <UXDgNRhUFU>:
 80491c6:	55                   	push   %ebp
 80491c7:	89 e5                	mov    %esp,%ebp
 80491c9:	83 ec 20             	sub    $0x20,%esp
 80491cc:	e8 f3 02 00 00       	call   80494c4 <__x86.get_pc_thunk.ax>
 80491d1:	05 01 00 00 00       	add    $0x1,%eax
 80491d6:	c7 45 e0 51 57 6a 41 	movl   $0x416a5751,-0x20(%ebp)
 80491dd:	c7 45 e4 77 50 44 61 	movl   $0x61445077,-0x1c(%ebp)
 80491e4:	c7 45 e8 57 62 51 6f 	movl   $0x6f516257,-0x18(%ebp)
 80491eb:	c7 45 ec 52 79 44 4a 	movl   $0x4a447952,-0x14(%ebp)
 80491f2:	c7 45 f0 58 59 67 66 	movl   $0x66675958,-0x10(%ebp)
 80491f9:	c7 45 f4 51 4b 73 65 	movl   $0x65734b51,-0xc(%ebp)
 8049200:	c7 45 f8 79 4e 63 00 	movl   $0x634e79,-0x8(%ebp)
 8049207:	c7 45 fc 1c 00 00 00 	movl   $0x1c,-0x4(%ebp)
 804920e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 8049212:	78 15                	js     8049229 <UXDgNRhUFU+0x63>
 8049214:	8b 45 08             	mov    0x8(%ebp),%eax
 8049217:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 804921a:	7d 0d                	jge    8049229 <UXDgNRhUFU+0x63>
 804921c:	8d 55 e0             	lea    -0x20(%ebp),%edx
 804921f:	8b 45 08             	mov    0x8(%ebp),%eax
 8049222:	01 d0                	add    %edx,%eax
 8049224:	0f b6 00             	movzbl (%eax),%eax
 8049227:	eb 05                	jmp    804922e <UXDgNRhUFU+0x68>
 8049229:	b8 d6 2d 00 00       	mov    $0x2dd6,%eax
 804922e:	c9                   	leave  
 804922f:	c3                   	ret    

08049230 <transform_code>:
 8049230:	55                   	push   %ebp
 8049231:	89 e5                	mov    %esp,%ebp
 8049233:	e8 8c 02 00 00       	call   80494c4 <__x86.get_pc_thunk.ax>
 8049238:	05 c8 2d 00 00       	add    $0x2dc8,%eax
 804923d:	c7 c2 a0 a1 04 08    	mov    $0x804a1a0,%edx
 8049243:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 8049246:	8b 14 8a             	mov    (%edx,%ecx,4),%edx
 8049249:	83 e2 07             	and    $0x7,%edx
 804924c:	83 fa 07             	cmp    $0x7,%edx
 804924f:	0f 87 85 00 00 00    	ja     80492da <.L6>
 8049255:	c1 e2 02             	shl    $0x2,%edx
 8049258:	8b 94 02 c8 e1 ff ff 	mov    -0x1e38(%edx,%eax,1),%edx
 804925f:	01 c2                	add    %eax,%edx
 8049261:	ff e2                	jmp    *%edx

08049263 <.L14>:
 8049263:	f7 55 08             	notl   0x8(%ebp)
 8049266:	eb 76                	jmp    80492de <.L6+0x4>

08049268 <.L13>:
 8049268:	c7 c0 a0 a1 04 08    	mov    $0x804a1a0,%eax
 804926e:	8b 55 0c             	mov    0xc(%ebp),%edx
 8049271:	8b 04 90             	mov    (%eax,%edx,4),%eax
 8049274:	83 e0 03             	and    $0x3,%eax
 8049277:	89 c1                	mov    %eax,%ecx
 8049279:	d3 7d 08             	sarl   %cl,0x8(%ebp)
 804927c:	eb 60                	jmp    80492de <.L6+0x4>

0804927e <.L12>:
 804927e:	c7 c0 a0 a1 04 08    	mov    $0x804a1a0,%eax
 8049284:	8b 55 0c             	mov    0xc(%ebp),%edx
 8049287:	8b 04 90             	mov    (%eax,%edx,4),%eax
 804928a:	f7 d0                	not    %eax
 804928c:	21 45 08             	and    %eax,0x8(%ebp)
 804928f:	eb 4d                	jmp    80492de <.L6+0x4>

08049291 <.L11>:
 8049291:	c7 c0 a0 a1 04 08    	mov    $0x804a1a0,%eax
 8049297:	8b 55 0c             	mov    0xc(%ebp),%edx
 804929a:	8b 04 90             	mov    (%eax,%edx,4),%eax
 804929d:	c1 e0 08             	shl    $0x8,%eax
 80492a0:	09 45 08             	or     %eax,0x8(%ebp)
 80492a3:	eb 39                	jmp    80492de <.L6+0x4>

080492a5 <.L10>:
 80492a5:	c7 c0 a0 a1 04 08    	mov    $0x804a1a0,%eax
 80492ab:	8b 55 0c             	mov    0xc(%ebp),%edx
 80492ae:	8b 04 90             	mov    (%eax,%edx,4),%eax
 80492b1:	31 45 08             	xor    %eax,0x8(%ebp)
 80492b4:	eb 28                	jmp    80492de <.L6+0x4>

080492b6 <.L9>:
 80492b6:	c7 c0 a0 a1 04 08    	mov    $0x804a1a0,%eax
 80492bc:	8b 55 0c             	mov    0xc(%ebp),%edx
 80492bf:	8b 04 90             	mov    (%eax,%edx,4),%eax
 80492c2:	f7 d0                	not    %eax
 80492c4:	09 45 08             	or     %eax,0x8(%ebp)
 80492c7:	eb 15                	jmp    80492de <.L6+0x4>

080492c9 <.L7>:
 80492c9:	c7 c0 a0 a1 04 08    	mov    $0x804a1a0,%eax
 80492cf:	8b 55 0c             	mov    0xc(%ebp),%edx
 80492d2:	8b 04 90             	mov    (%eax,%edx,4),%eax
 80492d5:	01 45 08             	add    %eax,0x8(%ebp)
 80492d8:	eb 04                	jmp    80492de <.L6+0x4>

080492da <.L6>:
 80492da:	f7 5d 08             	negl   0x8(%ebp)
 80492dd:	90                   	nop
 80492de:	8b 45 08             	mov    0x8(%ebp),%eax
 80492e1:	5d                   	pop    %ebp
 80492e2:	c3                   	ret    

080492e3 <generate_code>:
 80492e3:	55                   	push   %ebp
 80492e4:	89 e5                	mov    %esp,%ebp
 80492e6:	53                   	push   %ebx
 80492e7:	83 ec 14             	sub    $0x14,%esp
 80492ea:	e8 d1 fd ff ff       	call   80490c0 <__x86.get_pc_thunk.bx>
 80492ef:	81 c3 11 2d 00 00    	add    $0x2d11,%ebx
 80492f5:	8b 83 00 00 00 00    	mov    0x0(%ebx),%eax
 80492fb:	8b 55 08             	mov    0x8(%ebp),%edx
 80492fe:	89 10                	mov    %edx,(%eax)
 8049300:	c7 81 c6 c0 c0 04 08 	movl   $0xc725eb08,0x4c0c0c6(%ecx)
 8049307:	eb 25 c7 
 804930a:	c0 c0 c0             	rol    $0xc0,%al
 804930d:	04 08                	add    $0x8,%al
 804930f:	8b 00                	mov    (%eax),%eax
 8049311:	83 ec 08             	sub    $0x8,%esp
 8049314:	ff 75 f4             	pushl  -0xc(%ebp)
 8049317:	50                   	push   %eax
 8049318:	e8 13 ff ff ff       	call   8049230 <transform_code>
 804931d:	83 c4 10             	add    $0x10,%esp
 8049320:	89 c2                	mov    %eax,%edx
 8049322:	c7 c0 c0 c0 04 08    	mov    $0x804c0c0,%eax
 8049328:	89 10                	mov    %edx,(%eax)
 804932a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804932e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049331:	83 f8 09             	cmp    $0x9,%eax
 8049334:	76 d3                	jbe    8049309 <generate_code+0x26>
 8049336:	90                   	nop
 8049337:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 804933a:	c9                   	leave  
 804933b:	c3                   	ret    

0804933c <encode_1>:
 804933c:	55                   	push   %ebp
 804933d:	89 e5                	mov    %esp,%ebp
 804933f:	53                   	push   %ebx
 8049340:	83 ec 14             	sub    $0x14,%esp
 8049343:	e8 78 fd ff ff       	call   80490c0 <__x86.get_pc_thunk.bx>
 8049348:	81 c3 b8 2c 00 00    	add    $0x2cb8,%ebx
 804934e:	83 ec 0c             	sub    $0xc,%esp
 8049351:	ff 75 08             	pushl  0x8(%ebp)
 8049354:	e8 f7 fc ff ff       	call   8049050 <strlen@plt>
 8049359:	83 c4 10             	add    $0x10,%esp
 804935c:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804935f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8049366:	eb 60                	jmp    80493c8 <encode_1+0x8c>
 8049368:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804936b:	8b 45 08             	mov    0x8(%ebp),%eax
 804936e:	01 d0                	add    %edx,%eax
 8049370:	0f b6 00             	movzbl (%eax),%eax
 8049373:	0f be c0             	movsbl %al,%eax
 8049376:	c7 c2 00 a2 04 08    	mov    $0x804a200,%edx
 804937c:	0f b6 14 02          	movzbl (%edx,%eax,1),%edx
 8049380:	c7 c0 c0 c0 04 08    	mov    $0x804c0c0,%eax
 8049386:	8b 00                	mov    (%eax),%eax
 8049388:	89 d1                	mov    %edx,%ecx
 804938a:	31 c1                	xor    %eax,%ecx
 804938c:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804938f:	8b 45 08             	mov    0x8(%ebp),%eax
 8049392:	01 d0                	add    %edx,%eax
 8049394:	83 e1 7f             	and    $0x7f,%ecx
 8049397:	89 ca                	mov    %ecx,%edx
 8049399:	88 10                	mov    %dl,(%eax)
 804939b:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804939e:	8b 45 08             	mov    0x8(%ebp),%eax
 80493a1:	01 d0                	add    %edx,%eax
 80493a3:	0f b6 00             	movzbl (%eax),%eax
 80493a6:	3c 1f                	cmp    $0x1f,%al
 80493a8:	7e 0f                	jle    80493b9 <encode_1+0x7d>
 80493aa:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80493ad:	8b 45 08             	mov    0x8(%ebp),%eax
 80493b0:	01 d0                	add    %edx,%eax
 80493b2:	0f b6 00             	movzbl (%eax),%eax
 80493b5:	3c 7f                	cmp    $0x7f,%al
 80493b7:	75 0b                	jne    80493c4 <encode_1+0x88>
 80493b9:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80493bc:	8b 45 08             	mov    0x8(%ebp),%eax
 80493bf:	01 d0                	add    %edx,%eax
 80493c1:	c6 00 3f             	movb   $0x3f,(%eax)
 80493c4:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 80493c8:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80493cb:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 80493ce:	7c 98                	jl     8049368 <encode_1+0x2c>
 80493d0:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80493d3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 80493d6:	c9                   	leave  
 80493d7:	c3                   	ret    

080493d8 <encode_2>:
 80493d8:	55                   	push   %ebp
 80493d9:	89 e5                	mov    %esp,%ebp
 80493db:	53                   	push   %ebx
 80493dc:	83 ec 14             	sub    $0x14,%esp
 80493df:	e8 dc fc ff ff       	call   80490c0 <__x86.get_pc_thunk.bx>
 80493e4:	81 c3 1c 2c 00 00    	add    $0x2c1c,%ebx
 80493ea:	83 ec 0c             	sub    $0xc,%esp
 80493ed:	ff 75 08             	pushl  0x8(%ebp)
 80493f0:	e8 5b fc ff ff       	call   8049050 <strlen@plt>
 80493f5:	83 c4 10             	add    $0x10,%esp
 80493f8:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80493fb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8049402:	eb 5f                	jmp    8049463 <encode_2+0x8b>
 8049404:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8049407:	8b 45 08             	mov    0x8(%ebp),%eax
 804940a:	01 d0                	add    %edx,%eax
 804940c:	0f b6 00             	movzbl (%eax),%eax
 804940f:	0f be c0             	movsbl %al,%eax
 8049412:	c7 c2 00 a2 04 08    	mov    $0x804a200,%edx
 8049418:	0f b6 14 02          	movzbl (%edx,%eax,1),%edx
 804941c:	c7 c0 c0 c0 04 08    	mov    $0x804c0c0,%eax
 8049422:	8b 00                	mov    (%eax),%eax
 8049424:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8049427:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804942a:	8b 45 08             	mov    0x8(%ebp),%eax
 804942d:	01 d0                	add    %edx,%eax
 804942f:	83 e1 7f             	and    $0x7f,%ecx
 8049432:	89 ca                	mov    %ecx,%edx
 8049434:	88 10                	mov    %dl,(%eax)
 8049436:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8049439:	8b 45 08             	mov    0x8(%ebp),%eax
 804943c:	01 d0                	add    %edx,%eax
 804943e:	0f b6 00             	movzbl (%eax),%eax
 8049441:	3c 1f                	cmp    $0x1f,%al
 8049443:	7e 0f                	jle    8049454 <encode_2+0x7c>
 8049445:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8049448:	8b 45 08             	mov    0x8(%ebp),%eax
 804944b:	01 d0                	add    %edx,%eax
 804944d:	0f b6 00             	movzbl (%eax),%eax
 8049450:	3c 7f                	cmp    $0x7f,%al
 8049452:	75 0b                	jne    804945f <encode_2+0x87>
 8049454:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8049457:	8b 45 08             	mov    0x8(%ebp),%eax
 804945a:	01 d0                	add    %edx,%eax
 804945c:	c6 00 2a             	movb   $0x2a,(%eax)
 804945f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 8049463:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049466:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 8049469:	7c 99                	jl     8049404 <encode_2+0x2c>
 804946b:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804946e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8049471:	c9                   	leave  
 8049472:	c3                   	ret    

08049473 <do_phase>:
 8049473:	55                   	push   %ebp
 8049474:	89 e5                	mov    %esp,%ebp
 8049476:	53                   	push   %ebx
 8049477:	83 ec 04             	sub    $0x4,%esp
 804947a:	e8 41 fc ff ff       	call   80490c0 <__x86.get_pc_thunk.bx>
 804947f:	81 c3 81 2b 00 00    	add    $0x2b81,%ebx
 8049485:	83 ec 0c             	sub    $0xc,%esp
 8049488:	68 fe 00 00 00       	push   $0xfe
 804948d:	e8 51 fe ff ff       	call   80492e3 <generate_code>
 8049492:	83 c4 10             	add    $0x10,%esp
 8049495:	c7 c0 c8 c0 04 08    	mov    $0x804c0c8,%eax
 804949b:	8b 00                	mov    (%eax),%eax
 804949d:	83 ec 0c             	sub    $0xc,%esp
 80494a0:	c7 c2 b4 c0 04 08    	mov    $0x804c0b4,%edx
 80494a6:	52                   	push   %edx
 80494a7:	ff d0                	call   *%eax
 80494a9:	83 c4 10             	add    $0x10,%esp
 80494ac:	83 ec 0c             	sub    $0xc,%esp
 80494af:	c7 c0 b4 c0 04 08    	mov    $0x804c0b4,%eax
 80494b5:	50                   	push   %eax
 80494b6:	e8 85 fb ff ff       	call   8049040 <puts@plt>
 80494bb:	83 c4 10             	add    $0x10,%esp
 80494be:	90                   	nop
 80494bf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 80494c2:	c9                   	leave  
 80494c3:	c3                   	ret    

080494c4 <__x86.get_pc_thunk.ax>:
 80494c4:	8b 04 24             	mov    (%esp),%eax
 80494c7:	c3                   	ret    
 80494c8:	66 90                	xchg   %ax,%ax
 80494ca:	66 90                	xchg   %ax,%ax
 80494cc:	66 90                	xchg   %ax,%ax
 80494ce:	66 90                	xchg   %ax,%ax

080494d0 <__libc_csu_init>:
 80494d0:	f3 0f 1e fb          	endbr32 
 80494d4:	55                   	push   %ebp
 80494d5:	e8 6b 00 00 00       	call   8049545 <__x86.get_pc_thunk.bp>
 80494da:	81 c5 26 2b 00 00    	add    $0x2b26,%ebp
 80494e0:	57                   	push   %edi
 80494e1:	56                   	push   %esi
 80494e2:	53                   	push   %ebx
 80494e3:	83 ec 0c             	sub    $0xc,%esp
 80494e6:	89 eb                	mov    %ebp,%ebx
 80494e8:	8b 7c 24 28          	mov    0x28(%esp),%edi
 80494ec:	e8 0f fb ff ff       	call   8049000 <_init>
 80494f1:	8d 9d 10 ff ff ff    	lea    -0xf0(%ebp),%ebx
 80494f7:	8d 85 0c ff ff ff    	lea    -0xf4(%ebp),%eax
 80494fd:	29 c3                	sub    %eax,%ebx
 80494ff:	c1 fb 02             	sar    $0x2,%ebx
 8049502:	74 29                	je     804952d <__libc_csu_init+0x5d>
 8049504:	31 f6                	xor    %esi,%esi
 8049506:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804950d:	8d 76 00             	lea    0x0(%esi),%esi
 8049510:	83 ec 04             	sub    $0x4,%esp
 8049513:	57                   	push   %edi
 8049514:	ff 74 24 2c          	pushl  0x2c(%esp)
 8049518:	ff 74 24 2c          	pushl  0x2c(%esp)
 804951c:	ff 94 b5 0c ff ff ff 	call   *-0xf4(%ebp,%esi,4)
 8049523:	83 c6 01             	add    $0x1,%esi
 8049526:	83 c4 10             	add    $0x10,%esp
 8049529:	39 f3                	cmp    %esi,%ebx
 804952b:	75 e3                	jne    8049510 <__libc_csu_init+0x40>
 804952d:	83 c4 0c             	add    $0xc,%esp
 8049530:	5b                   	pop    %ebx
 8049531:	5e                   	pop    %esi
 8049532:	5f                   	pop    %edi
 8049533:	5d                   	pop    %ebp
 8049534:	c3                   	ret    
 8049535:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804953c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08049540 <__libc_csu_fini>:
 8049540:	f3 0f 1e fb          	endbr32 
 8049544:	c3                   	ret    

08049545 <__x86.get_pc_thunk.bp>:
 8049545:	8b 2c 24             	mov    (%esp),%ebp
 8049548:	c3                   	ret    

Disassembly of section .fini:

0804954c <_fini>:
 804954c:	f3 0f 1e fb          	endbr32 
 8049550:	53                   	push   %ebx
 8049551:	83 ec 08             	sub    $0x8,%esp
 8049554:	e8 67 fb ff ff       	call   80490c0 <__x86.get_pc_thunk.bx>
 8049559:	81 c3 a7 2a 00 00    	add    $0x2aa7,%ebx
 804955f:	83 c4 08             	add    $0x8,%esp
 8049562:	5b                   	pop    %ebx
 8049563:	c3                   	ret    
